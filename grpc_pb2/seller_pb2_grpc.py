# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import grpc_pb2.seller_pb2 as seller__pb2


class SellStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateAccount = channel.unary_unary(
                '/sell.Sell/CreateAccount',
                request_serializer=seller__pb2.Seller.SerializeToString,
                response_deserializer=seller__pb2.UpdateResponse.FromString,
                )
        self.GetUserID = channel.unary_unary(
                '/sell.Sell/GetUserID',
                request_serializer=seller__pb2.Login.SerializeToString,
                response_deserializer=seller__pb2.UpdateResponse.FromString,
                )
        self.GetSellerRating = channel.unary_unary(
                '/sell.Sell/GetSellerRating',
                request_serializer=seller__pb2.UserID.SerializeToString,
                response_deserializer=seller__pb2.SellerRating.FromString,
                )
        self.ItemForSale = channel.unary_unary(
                '/sell.Sell/ItemForSale',
                request_serializer=seller__pb2.Item.SerializeToString,
                response_deserializer=seller__pb2.UpdateResponse.FromString,
                )
        self.ChangeSalePrice = channel.unary_unary(
                '/sell.Sell/ChangeSalePrice',
                request_serializer=seller__pb2.PriceIDPack.SerializeToString,
                response_deserializer=seller__pb2.UpdateResponse.FromString,
                )
        self.RemoveItem = channel.unary_unary(
                '/sell.Sell/RemoveItem',
                request_serializer=seller__pb2.QuantityIDPack.SerializeToString,
                response_deserializer=seller__pb2.UpdateResponse.FromString,
                )
        self.DisplayItems = channel.unary_unary(
                '/sell.Sell/DisplayItems',
                request_serializer=seller__pb2.UserID.SerializeToString,
                response_deserializer=seller__pb2.DisplayItemsReply.FromString,
                )


class SellServicer(object):
    """The greeting service definition.
    """

    def CreateAccount(self, request, context):
        """Unary
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSellerRating(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ItemForSale(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeSalePrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisplayItems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SellServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccount,
                    request_deserializer=seller__pb2.Seller.FromString,
                    response_serializer=seller__pb2.UpdateResponse.SerializeToString,
            ),
            'GetUserID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserID,
                    request_deserializer=seller__pb2.Login.FromString,
                    response_serializer=seller__pb2.UpdateResponse.SerializeToString,
            ),
            'GetSellerRating': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSellerRating,
                    request_deserializer=seller__pb2.UserID.FromString,
                    response_serializer=seller__pb2.SellerRating.SerializeToString,
            ),
            'ItemForSale': grpc.unary_unary_rpc_method_handler(
                    servicer.ItemForSale,
                    request_deserializer=seller__pb2.Item.FromString,
                    response_serializer=seller__pb2.UpdateResponse.SerializeToString,
            ),
            'ChangeSalePrice': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeSalePrice,
                    request_deserializer=seller__pb2.PriceIDPack.FromString,
                    response_serializer=seller__pb2.UpdateResponse.SerializeToString,
            ),
            'RemoveItem': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveItem,
                    request_deserializer=seller__pb2.QuantityIDPack.FromString,
                    response_serializer=seller__pb2.UpdateResponse.SerializeToString,
            ),
            'DisplayItems': grpc.unary_unary_rpc_method_handler(
                    servicer.DisplayItems,
                    request_deserializer=seller__pb2.UserID.FromString,
                    response_serializer=seller__pb2.DisplayItemsReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sell.Sell', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Sell(object):
    """The greeting service definition.
    """

    @staticmethod
    def CreateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sell.Sell/CreateAccount',
            seller__pb2.Seller.SerializeToString,
            seller__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sell.Sell/GetUserID',
            seller__pb2.Login.SerializeToString,
            seller__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSellerRating(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sell.Sell/GetSellerRating',
            seller__pb2.UserID.SerializeToString,
            seller__pb2.SellerRating.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ItemForSale(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sell.Sell/ItemForSale',
            seller__pb2.Item.SerializeToString,
            seller__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeSalePrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sell.Sell/ChangeSalePrice',
            seller__pb2.PriceIDPack.SerializeToString,
            seller__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sell.Sell/RemoveItem',
            seller__pb2.QuantityIDPack.SerializeToString,
            seller__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisplayItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sell.Sell/DisplayItems',
            seller__pb2.UserID.SerializeToString,
            seller__pb2.DisplayItemsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
